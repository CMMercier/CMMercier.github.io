[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"~Coming Soon~ ","date":"September 21, 2021","hero":"/posts/owasp-webgoat/hero.jpg","permalink":"/posts/owasp-webgoat/","summary":"~Coming Soon~ ","tags":null,"title":"OWASP WebGoat Challenge"},{"categories":null,"contents":"Setup For this I visited https://elements.heroku.com/buttons/bkimminich/juice-shop and looked through the many options to get my own personal instance of Juice Shop setup. The first option, Deploy on Heroku for free, caught my eye. For this I simply had to:\n Sign up to Heroku and log in. Click the provided deploy button.  This really is the fastest and simplest way to get setup, and its free!\nAfter I clicked deploy I had to give the app a name and wait for it to build. Really the longest part of this was waiting for it to build. Now that the Juice Shop app is up and running its time to get hacking!\nNote: Hacking progress is restored on server resets but deleting your cookies will destroy your progress!\n1 * Challenges Scoreboard Category: Miscellaneous\nFirst to find access to the scoreboard. I remembered it existed but not where and forgot that it was actually a part of the challenges so I took to google and did a quick search for its location.\nhttps://exampleapp.herokuapp.com/#/score-board\nFirst challenge complete: Score Board (Find the carefully hidden \u0026lsquo;Score Board\u0026rsquo; page.)\nBonus Payload Category: XSS\nThis challenge is as simple as adding the provided payload to the search function.\nYou successfully solved a challenge: Bonus Payload (Use the bonus payload \u0026lt;iframe width=\u0026quot;100%\u0026quot; height=\u0026quot;166\u0026quot; scrolling=\u0026quot;no\u0026quot; frameborder=\u0026quot;no\u0026quot; allow=\u0026quot;autoplay\u0026quot; src=\u0026quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/771984076\u0026amp;color=%23ff5500\u0026amp;auto_play=true\u0026amp;hide_related=false\u0026amp;show _comments=true\u0026amp;show_user=true\u0026amp;show_reposts=false\u0026amp;show_teaser=true\u0026quot;\u0026gt;\u0026lt;/iframe\u0026gt; in the DOM XSS challenge.)\nBully Chatbot Category: Miscellaneous\nTo access the Chatbot I created a new account on the site then opened up the menu and selected the support chat. I really just had to send any message containing the words \u0026ldquo;coupon code\u0026rdquo; enough times for it to give up and hand over a code.\nYou successfully solved a challenge: Bully Chatbot (Receive a coupon code from the support chatbot.)\nConfidential Document Category: Sensitive Data Exposure\nThe hints:\n Somewhere in the application you can find a file that contains sensitive information about some - potentially hostile - takeovers the Juice Shop top management has planned.\n  -Analyze and tamper with links in the application that deliver a file directly.\n  -The file you are looking for is not protected in any way. Once you found it you can also access it.\n In the About Us section I found a link \u0026ldquo;Check out our boring terms of use if you are interested in such lame stuff.\u0026rdquo; that opened up a download window to get a legal.md document. I opened up burp suite and intercepted this request there and noticed the GET request was to a ftp server.\nSo I checked to see if something simple like https://exampleapp.herokuapp.com/ftp would work and it did!\nDOM XSS Category: XSS\n Perform a DOM XSS attack with \u0026lt;iframe src=\u0026quot;javascript:alert(xss)\u0026quot;\u0026gt;.\n This is another task where I was able to simply just copy the script provided and paste it into the search function to complete this challenge.\nYou successfully solved a challenge: DOM XSS (Perform a DOM XSS attack with \u0026lt;iframe src=\u0026quot;javascript:alert(xss)\u0026quot;\u0026gt;.)\nError Handling Category: Security Misconfiguration\n Provoke an error that is neither very gracefully nor consistently handled.\n This one has so many ways to trigger it that I ended up completing it and didn\u0026rsquo;t even notice.\nExposed Metrics Category: Sensitive Data Exposure\n Find the endpoint that serves usage data to be scraped by a popular monitoring system.\n The hints pretty much give this one away. A quick read through and the name of this challenge made it obvious that the path I was looking for was /metrics/.\n Guessing the path is probably just as quick as taking the RTFM route via https://prometheus.io/docs/introduction/first_steps\n You successfully solved a challenge: Exposed Metrics (Find the endpoint that serves usage data to be scraped by a popular monitoring system.)\nMissing Encoding Category: Improper Input Validation\n Retrieve the photo of Bjoern\u0026rsquo;s cat in \u0026ldquo;melee combat-mode\u0026rdquo;.\n Luckily this was as easy as url encoding the #\u0026rsquo;s to %23 because that emoji really had me scratching my head for a bit there.\nhttps://www.eso.org/~ndelmott/url_encode.html\nYou successfully solved a challenge: Missing Encoding (Retrieve the photo of Bjoern\u0026rsquo;s cat in \u0026ldquo;melee combat-mode\u0026rdquo;.)\nOutdated Allowlist Category: Unvalidated Redirects\nFor the reading: https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\n Let us redirect you to one of our crypto currency addresses which are not promoted any longer.\n For this one I inspected the page to open the debugger window so that I could have a look around the Javascript files to try to find the crypto currency address. The first place I checked was main-es2018.js and I simply did a search for redirect which had 20 results to check through but the answer was there and I simply had to paste this blockchain.info link to the app address.\nhttps://exampleapp.herokuapp.com/redirect?to=https://blockchain.info/address/1AbKfgvw9psQ41NbLi8kufDQTezwG8DRZm\nYou successfully solved a challenge: Outdated Allowlist (Let us redirect you to one of our crypto currency addresses which are not promoted any longer.)\nPrivacy Policy Category: Miscellaneous\n Read our privacy policy.\n This simply required me to be logged in and go to Account \u0026gt; Privacy \u0026amp; Security \u0026gt; Privacy Policy.\nYou successfully solved a challenge: Privacy Policy (Read our privacy policy.)\nRepetitive Registration Category: Improper Input Validation\n Follow the DRY principle while registering a user.\n    The DRY (Don\u0026rsquo;t Repeat Yourself) Principle states:\n  Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.\n This challenge required me to turn on burp and foxyproxy to catch a legit registration attempt and change the value of passwordRepeat then forward the request.\nYou successfully solved a challenge: Repetitive Registration (Follow the DRY principle while registering a user.)\nZero Stars Category: Improper Input Validation\n Give a devastating zero-star feedback to the store.\n Reading: https://cwe.mitre.org/data/definitions/20.html\nI found the customer feedback option as the first option on the menu. This page allows us to give a feedback of 1 to 5. Getting around this is as simple as intercepting the request in burp and changing the rating to 0.\nYou successfully solved a challenge: Zero Stars (Give a devastating zero-star feedback to the store.)\n2 * Challenges Admin Section Category: Broken Access Control\n Access the administration section of the store.\n The quick and easy first check was to try to guess the admin page location. I tried https://exampleapp.herokuapp.com/#/admin but no luck there so I tried administration instead and got a 403 You are not allowed to access this page!. Also turns out you can find this path from the main.js as well if guessing failed.\nI have found the page but I still need to login as the administrator to complete this challege. Going to the login page I see that we need the administrators email not username to login. So I go back and look through the shop looking for the complete email address somewhere or at least an @email to just have to guess the name.\nOn the review for the product Apple Juice contains a review from the admin themselves!\nadmin@juice-sh.op\nThe category for this challenge is injection but there\u0026rsquo;s another challenge to log in without using injection so its time to brute force the login page instead and complete both challenges in one go. I first attempted this with hydra but soon discovered that hydra is does not work because this is a client-side AngularJS route. So its time to try with burp! I captured the request and sent it over to intruder. I set the position to the password and on payload options I loaded a smaller file from seclist called best1050.txt as I only have the free version of burp and it doesn\u0026rsquo;t load rockyou. Running this attack on the free version is a bit slow but it works and I get the password.\nThis completes two challenges:\nYou successfully solved a challenge: Login Admin (Log in with the administrator\u0026rsquo;s user account.)\nYou successfully solved a challenge: Password Strength (Log in with the administrator\u0026rsquo;s user credentials without previously changing them or applying SQL Injection.)\nNow to just login with the credentials admin@juice-sh.op:admin123 and head over to the previously found /#/administration page to complete this challenge.\nYou successfully solved a challenge: Admin Section (Access the administration section of the store.)\nDeprecated Interface Category: Security Misconfiguration\n Use a deprecated B2B interface that was not properly shut down.\n For this I had to do some googling to understand what B2B integration was about and came across this explanation \u0026ldquo;It allows them to work and trade more effectively with their customers, suppliers and business partners by automating key business processes.\u0026rdquo; from www.ibm.com. So I headed over to the complaint page on the menu and took a look at what file types were accepted which turned out to be .pdf and .zip files. Inspecting this and heading back to debugger to take a look at the main-es2018.js and doing a search for zip revealed that .xml was also accepted.\nI didn\u0026rsquo;t have any random .xml files around so I used touch test.xml to create one and then selected browse on the site and chose all file types so that I could select this file and upload it.\nYou successfully solved a challenge: Deprecated Interface (Use a deprecated B2B interface that was not properly shut down.)\nFive-Star Feedback Category: Broken Access Control\n Get rid of all 5-star customer feedback.\n Sounds like an admin task, so I headed back to the administration page to take a look and sure enough the customer feedback section was there with only one 5-star feedback. All I had to do was hit delete on this one and the challenge completed.\nYou successfully solved a challenge: Five-Star Feedback (Get rid of all 5-star customer feedback.)\nLogin Admin Category: Injection\n Log in with the administrator\u0026rsquo;s user account.\n See Admin Section challenge solve.\nAnother method is with injection like the category suggests. Log in with Email ' or 1=1-- and any Password which will authenticate the first entry in the Users table which usually happens to be the administrator.\nLogin MC SafeSearch Category: Sensitive Data Exposure\n Log in with MC SafeSearch\u0026rsquo;s original user credentials without applying SQL Injection or any other bypass.\n The hints for this supply a link to a video by MC SafeSearch at https://www.youtube.com/watch?v=v59CX2DiX0Y called \u0026ldquo;Protect Ya' Passwordz\u0026rdquo;. Watch this video to learn that MC used the name of his dog \u0026ldquo;Mr. Noodles\u0026rdquo; as a password but changed \u0026ldquo;some vowels into zeroes\u0026rdquo;.\nAll I had to do was log in with email mc.safesearch@juice-sh.op, as we already know what email addresses look like for this site and could easily guess the name, and password Mr. N00dles to solve this challenge.\nYou successfully solved a challenge: Login MC SafeSearch (Log in with MC SafeSearch\u0026rsquo;s original user credentials without applying SQL Injection or any other bypass.)\nMeta Geo Stalking Category: Sensitive Data Exposure\n Determine the answer to John\u0026rsquo;s security question by looking at an upload of him to the Photo Wall and use it to reset his password via the Forgot Password mechanism.\n The title hints toward geo data so I headed over to the photo wall and downloaded the picture by jOhNny. I then ran exiftool to get the GPS coordinates.\nAnd then did a google search of these coordinates to find a name that could be the security question.\nIt took quite a few attempts but I eventually found it to be Daniel Boone National Forest and was able to login by going to \u0026ldquo;forgot your password?\u0026rdquo; and using john@juice-sh.op for the email, Daniel Boone National Forest for the security question, and resetting the password.\nYou successfully solved a challenge: Meta Geo Stalking (Determine the answer to John\u0026rsquo;s security question by looking at an upload of him to the Photo Wall and use it to reset his password via the Forgot Password mechanism.)\nPassword Strength Category: Broken Authentication\n Log in with the administrator\u0026rsquo;s user credentials without previously changing them or applying SQL Injection.\n See Admin Section challenge solve.\nSecurity Policy Category: Miscellaneous\n Behave like any \u0026ldquo;white-hat\u0026rdquo; should before getting into the action.\n For this I attempted to run gobuster and dirbuster against the site to no success. So I loaded up OWASP\u0026rsquo;s very own ZAP and was able to find a file at https://exampleapp.herokuapp.com/.well-known/security.txt. I went to that address and the challenge completed but out of curiosity I looked up what this file was about anyway and heres the link for reference: https://securitytxt.org/.\nYou successfully solved a challenge: Security Policy (Behave like any \u0026ldquo;white-hat\u0026rdquo; should before getting into the action.)\nView Basket Category: Broken Access Control\n View another user\u0026rsquo;s shopping basket.\n I headed over to the main page and added an item to the basket then selected the basket. On the basket page I inspected the page and went to the session storage where I found the item total and bid. Bid must hold the user id value so I changed the 1 to 2 and reloaded the page to complete the challenge.\nYou successfully solved a challenge: View Basket (View another user\u0026rsquo;s shopping basket.)\nVisual Geo Stalking Category: Sensitive Data Exposure\n Determine the answer to Emma\u0026rsquo;s security question by looking at an upload of her to the Photo Wall and use it to reset her password via the Forgot Password mechanism.\n At first I attempted a reverse image search on google but saw quickly that that was not the way to go with this. Looking closer at the image itself I noticed the ITsec logo in a window on the left side.\nUsing this (case sensitive) as the security question I was able to reset her password and complete the challenge.\nYou successfully solved a challenge: Visual Geo Stalking (Determine the answer to Emma\u0026rsquo;s security question by looking at an upload of her to the Photo Wall and use it to reset her password via the Forgot Password mechanism.)\nWeird Crypto Category: Cryptographic Issues\n Inform the shop about an algorithm or library it should definitely not use the way it does.\n When completing the Meta Geo Stalking challenge I got a password hash back in the response from the burp request. Using hash-identifier I found out that this has is only an unsalted MD5. Taking this hash to crackstation.net easily got me the password of john@juice-sh.op as test1234.\nThe challenge says to inform the shop about the algorithm so to complete this challenge I had to go to Customer Feedback on the menu and simply leave a comment that said MD5 and solve the captcha to submit.\nYou successfully solved a challenge: Weird Crypto (Inform the shop about an algorithm or library it should definitely not use the way it does.)\nReflected XSS Unavailable on the Heroku environment.\n3 * Challenges API-only XSS Unavailable on the Heroku environment.\nAdmin Registration Category: Improper Input Validation\n Register as a user with administrator privileges.\n Privacy Policy Inspection Category: Security through Obscurity\n Prove that you actually read our privacy policy.\n Going to Account \u0026gt; Privacy and Security \u0026gt; Privacy Policy didn\u0026rsquo;t immediately complete this task so I started having a look around and noticed some areas highlight. So I inspected one of these areas to find a class=\u0026quot;hot\u0026quot;. There seems to be a code hidden here that starts with the site address, We may also, instruct you, to refuse all, reasonably necessary and responsibility.\nhttps://exampleapp.herokuapp.com/we/may/also/instruct/you/to/refuse/all/reasonably/necessary/responsibility\nGoing to this greets us with a 404 Error: ENOENT: no such file or directory, stat '/app/frontend/dist/frontend/assets/private/thank-you.jpg'\nAnd going back to the scoreboard I see the challenge has indeed completed.\nYou successfully solved a challenge: Privacy Policy Inspection (Prove that you actually read our privacy policy.)\n ","date":"September 19, 2021","hero":"/posts/owasp-juice-shop-walkthrough/hero.jpg","permalink":"/posts/owasp-juice-shop-walkthrough/","summary":"Setup For this I visited https://elements.heroku.com/buttons/bkimminich/juice-shop and looked through the many options to get my own personal instance of Juice Shop setup. The first option, Deploy on Heroku for free, caught my eye. For this I simply had to:\n Sign up to Heroku and log in. Click the provided deploy button.  This really is the fastest and simplest way to get setup, and its free!\nAfter I clicked deploy I had to give the app a name and wait for it to build.","tags":null,"title":"OWASP Juice Shop Walkthrough"},{"categories":null,"contents":"Create a Repository Firstly you\u0026rsquo;ll want to create a repository for this on Github to make changes easier to update with git commit and push rather than uploading files manually every time you make changes. As this will be a Github Page you will want to name the repo as \u0026lsquo;.github.io\u0026rsquo;. Yes the .io here is important so make sure you add that.\nClone this repository to your local machine and cd to it, I added mine under the users documents folder.\nCreate the Hugo Site You\u0026rsquo;ll want to get the basic Hugo site next by using the command:\nhugo new site ./ -f=yaml --force The -f=yaml makes your YAML configuration file while the --force command is optional and only forces Hugo to build the site if theres files already in the directory so its unnecessary if you just created the directory.\nPick a Theme This part is the most important and should take you the longest. Before you go having a look around the themes first take the time to think about what you are making this site for and maybe note down what the theme needs to have and what things you\u0026rsquo;d like it to have but aren\u0026rsquo;t as necessary.\nThen head over to https://themes.gohugo.io/ and have a look at the tags on the right side. Chances are you already have in mind the kind of site you want. I was after a Portfolio site so that tag was the obvious choice for me to begin at.\nWhen you\u0026rsquo;ve found the theme you want you will have to click download and this will bring you to the github page for that theme. From there you will need to use the command git submodule add https://the-github-link.git themes/theme-name. I chose Toha for my theme so my command looks like:\ngit submodule add https://github.com/hugo-toha/toha.git themes/toha Run the Site You will want to test that its all working now and be able to see what changes you make appear like on the site locally before you commit those changes publicly on Github. To do this you will need to run the following command:\nhugo server -t toha -w Note that you will have to change toha to whatever theme you chose if you chose a different one. Running this opens up port 1313 by default to host your site locally and can be reached by going to http://localhost:1313.\nConfigure the Site Before you get started on the personal stuff it\u0026rsquo;s time to configure the basics first. Remember that yaml file we had Hugo create at the start? It is config.yaml and it is located in the root directory of your repository. Open it up in your favorite text editor, I personally use Atom for this. You\u0026rsquo;ll want to replace the default content with this:\n#baseURL: https://hugo-toha.github.io languageCode: en-us title: \u0026quot;Crystal Mercier\u0026quot; theme: \u0026quot;toha\u0026quot; # Manage languages # For any more details, you can check the official documentation: https://gohugo.io/content-management/multilingual/ languages: en: languageName: English weight: 1 # Force a locale to be use, really useful to develop the application ! Should be commented in production, the \u0026quot;weight\u0026quot; should rocks. # DefaultContentLanguage: bn # Allow raw html in markdown file markup: goldmark: renderer: unsafe: true tableOfContents: startLevel: 2 endLevel: 6 ordered: false # At least HTML and JSON are required for the main HTML content and # client-side JavaScript search outputs: home: - HTML - RSS - JSON # Enable Google Analytics googleAnalytics: UA-122321624-2 # Enable global emoji support enableEmoji: true # Site parameters params: # Background image of the landing page background: /images/default-background.jpg # Provide logos for your site. The inverted logo will be used in the initial # transparent navbar and the main logo will be used in the non-transparent navbar. logo: main: /images/site/main-logo.png inverted: /images/site/inverted-logo.png # GitHub repo of your site #gitRepo: https://github.com/hugo-toha/hugo-toha.github.io # Default branch of your Git repo #gitBranch: source # Configure various features of this theme features: # Enable and configure portfolio portfolio: enable: true # Enable and configure blog posts blog: enable: true # Enable \u0026amp; configure \u0026quot;Notes\u0026quot; features notes: enable: true # specify whether you want to show Table of Contents in reading page enableTOC: true # If you want to use different country flag for a language, specify them here. # flagOverwrites: # - languageCode: en # countryCode: us # Provide footer configuration. footer: enable: true # You can provide your custom footer template using this option. # Put your template in \u0026quot;layouts/partials\u0026quot; folder of your repo. template: footer.html # Show/hide navigation in the footer. Default is \u0026quot;true\u0026quot;. navigation: enable: true # Show/hide \u0026quot;Contact Me\u0026quot; section in the footer. Default is \u0026quot;true\u0026quot;. contactMe: enable: true # Show/hide credentials section in the footer. Default is \u0026quot;true\u0026quot;. credentials: enable: true # Show/hide newsletter section in the footer. Default is \u0026quot;true\u0026quot;. # Currently, it supports \u0026quot;mailchimp\u0026quot;. newsletter: enable: false provider: mailchimp mailchimpURL: https://github.us1.list-manage.com/subscribe/post?u=19de52a4603135aae97163fd8\u0026amp;amp;id=094a24c76e # Show/hide disclaimer notice in the footer. Default is \u0026quot;false\u0026quot;. disclaimer: enable: false If you used a different theme I suggest Googling configuration examples or complete documentation for that theme instead of just copying this. If you are using Toha theme make sure you change the title: and more configurable options can be found at https://toha-guides.netlify.app/posts/configuration/site-parameters/.\nAdd Data There should be a data folder in the root directory and inside this folder should be another called en for English. If one or both of these are missing then you\u0026rsquo;ll need to create them.\nSite First you\u0026rsquo;ll add site information by creating a file named site.yaml within the /data/en/ directory and add the following content:\n# Copyright Notice copyright: © 2020 Copyright. # Meta description for your site. This will help the search engines to find your site. description: Portfolio and personal blog of Crystal Mercier. Change the description to whatever you want yours to be.\nAuthor Next create an author.yaml file within the /data/en/ directory and add the following in it:\n# some information about you name: \u0026quot;Crystal Mercier\u0026quot; nickname: \u0026quot;Crystal\u0026quot; # greeting message before your name. it will default to \u0026quot;Hi! I am\u0026quot; if not provided greeting: \u0026quot;Hi, My name is\u0026quot; image: \u0026quot;images/author/crystal.png\u0026quot; # give your some contact information. they will be used in the footer contactInfo: email: \u0026quot;cmmercier86@gmail.com\u0026quot; # phone: \u0026quot;+0123456789\u0026quot; # some summary about what you do summary: - I am a Bug Bounty Hunter - I am a Security Researcher Again take some time to go over this and change the information to your own before saving.\nSections Now that the basics are set you will need to add a new directory named sections in /data/en and move into this new directory to add some more files.\nAbout Create a file named about.yaml and copy the following inside it:\n# section information section: name: About id: about enable: true weight: 1 showOnNavbar: true template: sections/about.html # your designation designation: Security Researcher # your company information #company: # name: Example Co. # url: \u0026quot;https://www.example.com\u0026quot; # your resume. this file path should be relative to you \u0026quot;static\u0026quot; directory resume: \u0026quot;files/resume.pdf\u0026quot; # a summary about you summary: 'I am a passionate about technology and fitness. I enjoy constantly learning new things and helping out others. This blog is to share helpful bits of information about various topics in IT and also topics that happen to interest me at the time. Hopefully as a visitor to the site you’ll find the blog posts here useful.' # your social links # give as many as you want. use font-awesome for the icons. socialLinks: - name: Email icon: \u0026quot;fas fa-envelope\u0026quot; url: \u0026quot;cmmercier86@gmail.com\u0026quot; - name: Github icon: \u0026quot;fab fa-github\u0026quot; url: \u0026quot;https://www.github.com/Cyb3rWulfengrav\u0026quot; - name: LinkedIn icon: \u0026quot;fab fa-linkedin\u0026quot; url: \u0026quot;https://www.linkedin.com/in/crystalmercier/\u0026quot; - name: Twitter icon: \u0026quot;fab fa-twitter\u0026quot; url: \u0026quot;https://twitter.com/CM3rc13r\u0026quot; # your soft skills # give the percentage between 50 to 100 with 5 intervals. # currently supported colors: blue, yellow, pink, green, sky, orange badges: - type: certification name: CompTIA Security+ url: \u0026quot;https://www.credly.com/org/comptia/badge/comptia-security-ce-certification\u0026quot; badge: \u0026quot;https://images.credly.com/size/340x340/images/74790a75-8451-400a-8536-92d792c5184a/CompTIA_Security_2Bce.png\u0026quot; - type: soft-skill-indicator name: Critical Thinking percentage: 100 color: yellow - type: soft-skill-indicator name: Communication percentage: 100 color: pink - type: soft-skill-indicator name: Problem Solving percentage: 100 color: orange - type: soft-skill-indicator name: Adaptability percentage: 100 color: green - type: soft-skill-indicator name: Team Work percentage: 100 color: sky Again change the information before saving and exiting this file. Also the resume.pdf should be supplied in the /static/files directory of your repository.\nSkills Next create the skills.yaml and copy the following:\n# section information section: name: Skills id: skills enable: true weight: 2 showOnNavbar: true # Can optionally hide the title in sections # hideTitle: true # Your Skills. # Give a summary of you each skill in the summary section. skills: - name: Linux logo: \u0026quot;/images/sections/skills/linux.png\u0026quot; summary: \u0026quot;Kali and Ubuntu in Virtual Environments, Basic Bash Commands, File System Hierarchy, User Account Management, Network Firewalls.\u0026quot; - name: Windows logo: \u0026quot;/images/sections/skills/windows.png\u0026quot; summary: \u0026quot;Hardware, Active Directory, Powershell, Supporting and Troubleshooting, Backup and Restore, Security and Networking.\u0026quot; - name: Risk Analysis logo: \u0026quot;/images/sections/skills/riskanalysis.png\u0026quot; summary: \u0026quot;Identifying network vulnerabilities and risks. Configuring Networks in a secure manner to protect against breaches, malware and insider threats.\u0026quot; - name: Security Assessment Tools logo: \u0026quot;/images/sections/skills/tools.png\u0026quot; summary: \u0026quot;Kali Linux, Nmap, Burp Suite, OWASP ZAP Proxy, SQLMap, Wireshark, Nessus, John the Ripper, Hydra..etc\u0026quot; - name: Web Technologies logo: \u0026quot;/images/sections/skills/web.png\u0026quot; summary: \u0026quot;HTTP protocol, HTTP status codes and headers, the basics of network security, basic understanding of web programming languages.\u0026quot; - name: Web Hacking logo: \u0026quot;/images/sections/skills/webcode.png\u0026quot; summary: \u0026quot;Knowledgeable in web application security vulnerabilities like XSS, CSRF, and RCE.\u0026quot; Change what you need to and save before closing.\nExperiences Next create experiences.yaml and add the following:\n# section information section: name: Experiences id: experiences enable: false weight: 3 showOnNavbar: true # Can optionally hide the title in sections # hideTitle: true # Your experiences experiences: - company: name: Example Co. url: \u0026quot;https://www.example.com\u0026quot; location: Dhaka Branch # company overview overview: Example Co. is a widely recognized company for cloud-native development. It builds tools for Kubernetes. positions: - designation: Senior Software Engineer start: Nov 2019 # don't provide end date if you are currently working there. It will be replaced by \u0026quot;Present\u0026quot; # end: Dec 2020 # give some points about what was your responsibilities at the company. responsibilities: - Design and develop XYZ tool for ABC task - Design, develop and manage disaster recovery tool [Xtool](https://www.example.com) that backup Kubernetes volumes, databases, and cluster's resource definition. - Lead backend team. - company: name: PreExample Co. url: \u0026quot;https://www.preexample.com\u0026quot; location: Nowhere overview: PreExample Co. is a gateway company to enter into Example co. So, nothing special here. positions: - designation: Software Engineer start: March 2016 end: May 2017 responsibilities: - Write lots of example codes. - Read lots of examples. - See lots of example videos. Again Change what you need to and save before closing.\nProjects Create projects.yaml and add the following to it:\n# section information section: name: Projects id: projects enable: true weight: 6 showOnNavbar: true # Can optionally hide the title in sections # hideTitle: true # filter buttons #buttons: #- name: All # filter: \u0026quot;all\u0026quot; #- name: Professional # filter: \u0026quot;professional\u0026quot; #- name: Academic # filter: \u0026quot;academic\u0026quot; #- name: Hobby # filter: \u0026quot;hobby\u0026quot; # your projects projects: - name: TryHackMe Write-Ups logo: /images/sections/projects/tryhackme.png role: Owner timeline: \u0026quot;July 2021 - Present\u0026quot; repo: https://github.com/Cyb3rWulfengrav/THM_Write-Ups #url: \u0026quot;\u0026quot; # If your project is not a public repo but it has a website or any external details url then provide it here. don't provide \u0026quot;repo\u0026quot; and \u0026quot;url\u0026quot; simultaneously. summary: Write-ups for various hacktivities on tryhackme.com. tags: [\u0026quot;Write-up\u0026quot;, \u0026quot;TryHackMe\u0026quot;, \u0026quot;Hacktivities\u0026quot;] - name: HackTheBox logo: /images/sections/projects/hackthebox.png role: Owner timeline: \u0026quot;July 2021 - Present\u0026quot; repo: https://github.com/Cyb3rWulfengrav/HTB_Write-Ups #url: \u0026quot;\u0026quot; summary: My collection of write-ups for the site hackthebox.eu. tags: [\u0026quot;Write-up\u0026quot;, \u0026quot;HackTheBox\u0026quot;,\u0026quot;Hacktivities\u0026quot;] #- name: Toha # logo: /images/sections/projects/toha.png # role: Owner # timeline: \u0026quot;Jun 2019 - Present\u0026quot; # repo: https://github.com/hossainemruz/toha # summary: A Hugo theme for personal portfolio. # tags: [\u0026quot;hobby\u0026quot;,\u0026quot;hugo\u0026quot;,\u0026quot;theme\u0026quot;,\u0026quot;professional\u0026quot;] Change what you need to and save before closing.\nRecent Posts Create the recent-posts.yaml file and add the following:\n# section information section: name: Recent Posts id: recent-posts enable: true weight: 7 showOnNavbar: true The only things you might want to change here are the weight (decides what order it appears in relation to the other sections) and whether you want it on the Navbar or not.\nAchievements Create achievements.yaml file and add the following:\n# section information section: name: Achievements id: achievements enable: false weight: 6 showOnNavbar: true # Can optionally hide the title in sections # hideTitle: true # Your achievements achievements achievements: - title: Best Presenter image: /images/sections/achievements/presenter.jpg summary: Best presenter in the 2020 XYZ conference. - title: Champion image: /images/sections/achievements/sport.jpg summary: Champion in cycling inter-city cycling championship 2020. - title: Graduation image: /images/sections/achievements/graduation-cap.jpg summary: Received Bachelor of Science (B.Sc.) in Computer Science and Engineer from XYZ University. - title: Award Winner image: /images/sections/achievements/woman-winner.jpg summary: Wined best paper award at IEE Conference 2020. Set enable to true and change the information if you wish to use this section.\nDeploy site In the root directory run the command hugo, this builds the site and adds the contents to the folder public. Move into this folder and use the following commands:\ngit init git add . git remote add origin https://github.com/username/username.github.io.git git commit -m \u0026quot;first commit\u0026quot; git push origin master The git push step will ask for your username and password. Note that Github passwords do not seem to work for this anymore and the password is really asking for your Github personal access token. If you do not have a Github personal access token set you must do that now. When this successfully completes your new site will be up and running at https://\u0026lt;your username\u0026gt;.github.io.\nPersonal Access Token Open Github and go to settings on the menu that appears when you click your icon. From there click on Developer settings and the Personal access token section. Click Generate new token and give it a descriptive name and expiration date then give it the permissions you require and click Generate token.\nUse this token as the password and your push request will complete.\nAdd Posts To start adding new posts to your site you have to go to themes/toha/content and posts, if posts directory does not exist already you must create it then cd posts. Now create a file named _index.md within themes/toha/content/posts and add the following:\n--- title: Posts --- Next create a directory for your first post and cd into this new directory. Now create a file named index.md, this is a Markdown file and follows the Markdown syntax. Here is a quick cheat sheet for reference https://www.markdownguide.org/cheat-sheet/. Enter the following to the index.md file to get started:\n--- title: \u0026quot;How to build your own Hugo Website and host it for free on Github Pages\u0026quot; date: 2021-09-12 description: \u0026quot;I walk through the steps required to get a website up and running fast and easy using Hugo and Github Pages\u0026quot; menu: sidebar: name: Build your own Hugo website identifier: Build your own Hugo website weight: 1 --- Change the information to match your own post and begin writing your post below those --- lines. Happy posting!\nNotes To configure sections: data/en/\nImage file location: themes/toha/static/images\nTheme images location: themes/toha/assets/images\nPosts location: themes/toha/content/posts\n","date":"September 12, 2021","hero":"/posts/website-guide/hero.png","permalink":"/posts/website-guide/","summary":"Create a Repository Firstly you\u0026rsquo;ll want to create a repository for this on Github to make changes easier to update with git commit and push rather than uploading files manually every time you make changes. As this will be a Github Page you will want to name the repo as \u0026lsquo;.github.io\u0026rsquo;. Yes the .io here is important so make sure you add that.\nClone this repository to your local machine and cd to it, I added mine under the users documents folder.","tags":null,"title":"How to build your own Hugo Website and host it for free on Github Pages"}]